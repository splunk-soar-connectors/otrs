{
    "appid" : "645dbdbd-37c7-497a-8ebd-024f9f03d127",
    "name" : "OTRS",
    "description" : "This app allows OTRS ticket management system by implementing actions such as 'create ticket', 'get ticket' etc. You have to create and set up Web Services on an OTRS services in advance. Network Transport must be 'HTTP::REST'",
    "type": "ticketing",
    "publisher": "Tokyo Electron Device",
    "main_module" : "otrs_connector.pyc",
    "app_version": "1.0.3",
    "utctime_updated": "2017-03-31T00:00:00.000000Z",
    "package_name": "ted_otrs",
    "product_vendor": "OTRS",
    "product_name": "OTRS",
    "product_version_regex": ".*",
    "min_phantom_version": "1.2.283",
    "logo": "otrs.png",
    "license": "Copyright (c) Tokyo Electron Device LTD. 2017",
    "configuration": {
      "device_url": {
        "data_type": "string",
        "order": 0,
        "description": "Device URL including the port, e.g. http://otrs.mydomain:8080",
        "required": true
      },
      "verify_server_cert": {
        "data_type": "boolean",
        "description": "Verify server certificate if you uses https",
        "required": true,
        "order": 1,
        "default": false
      },
      "username": {
        "data_type": "string",
        "order": 2,
        "description": "Username",
        "required": true
      },
      "password": {
        "data_type": "password",
        "order": 3,
        "description": "Password",
        "required": true
      },
      "service_name": {
        "data_type": "string",
        "order": 4,
        "description": "OTRS web service name",
        "required": true
      },
      "mapping_create_ticket": {
        "data_type": "string",
        "order": 5,
        "description": "Route mapping for creating a ticket (default : '/TicketCreate')",
        "required": false,
        "default": "/TicketCreate"
      },
      "mapping_update_ticket": {
        "data_type": "string",
        "order": 6,
        "description": "Route mapping for updating a ticket (default : '/TicketUpdate')",
        "required": false,
        "default": "/TicketUpdate"
      },
      "mapping_get_ticket": {
        "data_type": "string",
        "order": 7,
        "description": "Route mapping for getting a ticket (default : '/TicketGet')",
        "required": false,
        "default": "/TicketGet"
      },
      "mapping_search_ticket": {
        "data_type": "string",
        "order": 8,
        "description": "Route mapping for searching a ticket (default : '/TicketSearch')",
        "required": false,
        "default": "/TicketSearch"
      }
    },
    "actions": [
      {
        "action": "test connectivity",
        "description": "Validate the asset configuration for connectivity using supplied credentials.",
        "type": "test",
        "identifier": "test_asset_connectivity",
        "read_only": true,
        "parameters": {
        },
        "output": [],
        "versions":"EQ(*)"
      },
      {
        "action": "create ticket",
        "description": "Create ticket",
        "verbose": "This action requires some parameters for will create ticket",
        "type": "generic",
        "identifier": "create_ticket",
        "read_only": false,
        "parameters": {
          "Ticket:Title": {
            "description": "Ticket title",
            "data_type": "string",
            "order": 0,
            "required": true
          },
          "Ticket:CustomerUser": {
            "description": "Customer user name",
            "data_type": "string",
            "order": 1,
            "required": true
          },
          "Ticket:Priority": {
            "description": "Ticket priority",
            "data_type": "string",
            "order": 2,
            "required": true,
            "value_list": ["1 very low", "2 low", "3 normal", "4 high", "5 very high" ],
            "default": "3 normal"
          },
          "Ticket:State": {
            "description": "Ticket state",
            "data_type": "string",
            "order": 3,
            "required": true,
            "value_list": ["closed successful", "closed unsuccessful", "merged", "new", "open", "removed"],
            "default": "new"
          },
          "Ticket:Queue": {
            "description": "Ticket queue",
            "data_type": "string",
            "order": 4,
            "required": true
          },
          "Article:Subject": {
            "description": "Ticket article subject",
            "data_type": "string",
            "order": 6,
            "required": true
          },
          "Article:Body": {
            "description": "Ticket article body",
            "data_type": "string",
            "order": 7,
            "required": true
          }
        },
        "render": {
          "width": 12,
          "title": "Create Ticket",
          "type": "table",
          "height": 5
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:Queue",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:Title",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:State",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:Priority",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Article:Subject",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Article:Body",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:CustomerUser",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.TicketNumber",
            "data_type": "string",
            "column_name": "Ticket Number",
            "column_order": 1
          },
          {
            "data_path": "action_result.data.*.TicketID",
            "data_type": "string",
            "column_name": "Tikcet ID",
            "column_order": 2
          },
          {
            "data_path": "action_result.data.*.ArticleID",
            "data_type": "string",
            "column_name": "Article ID",
            "column_order": 3
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "update ticket",
        "description": "Update a ticket",
        "verbose": "This action requires ticket id and some parameters for will update ticket",
        "type": "generic",
        "identifier": "update_ticket",
        "read_only": false,
        "parameters": {
          "Ticket:TicketID": {
            "description": "Ticket id of updating ticket",
            "data_type": "string",
            "order": 0,
            "required": true
          },
          "Ticket:Title": {
            "description": "Ticket title",
            "data_type": "string",
            "order": 1,
            "required": false
          },
          "Ticket:CustomerUser": {
            "description": "Customer user",
            "data_type": "string",
            "order": 2,
            "required": false
          },
          "Ticket:Priority": {
            "description": "Ticket priority",
            "data_type": "string",
            "order": 3,
            "required": false,
            "value_list": ["", "1 very low", "2 low", "3 normal", "4 high", "5 very high"],
            "default":""
          },
          "Ticket:State": {
            "description": "Ticket state",
            "data_type": "string",
            "order": 4,
            "required": false,
            "value_list": ["","closed successful", "closed unsuccessful", "merged", "new", "open", "removed"],
            "default": ""
          },
          "Ticket:Queue": {
            "description": "Ticket queue",
            "data_type": "string",
            "order": 5,
            "required": false
          },
          "Article:Subject": {
            "description": "Ticket article subject",
            "data_type": "string",
            "order": 7,
            "required": false
          },
          "Article:Body": {
            "description": "Ticket article body",
            "data_type": "string",
            "order": 8,
            "required": false
          }
        },
        "render": {
          "width": 12,
          "title": "Update Ticket",
          "type": "table",
          "height": 5
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:Queue",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:TicketID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:Title",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:State",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:Priority",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Article:Subject",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Article:Body",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:CustomerUser",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.TicketNumber",
            "data_type": "string",
            "column_name": "Ticket Number",
            "column_order": 1
          },
          {
            "data_path": "action_result.data.*.TicketID",
            "data_type": "string",
            "column_name": "Tikcet ID",
            "column_order": 2
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "get ticket",
        "description": "Get ticket",
        "verbose": "This action requires ticket id for will get ticket",
        "type": "generic",
        "identifier": "get_ticket",
        "read_only": true,
        "parameters": {
          "Ticket:TicketID": {
            "description": "Ticket id of retreaving ticket",
            "data_type": "numeric",
            "order": 0,
            "required": true
          }
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.Ticket:TicketID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.CustomerUserID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.SLAID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Lock",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.CreateTimeUnix",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.ArchiveFlag",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.TypeID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.CustomerID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Owner",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.GroupID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.RealTillTimeNotUsed",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Changed",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.OwnerID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.EscalationTime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Age",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.PriorityID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.ServiceID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Type",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Responsible",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.StateID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Title",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.ResponsibleID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.ChangeBy",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Created",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Priority",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.UntilTime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.EscalationUpdateTime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Queue",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.QueueID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.State",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.Title",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.CreateBy",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.TicketID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.StateType",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.UnlockTimeout",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.EscalationResponseTime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.EscalationSolutionTime",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.LockID",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.TicketNumber",
            "data_type": "string"
          }
        ],
        "versions":"EQ(*)"
      },
      {
        "action": "run query",
        "description": "Run query for searching ticket",
        "verbose": "This action requires search query in json format that consists of key names and list of values. e.g. {\"Queues\": [\"Raw\", \"Junk\"]}. The result is list of ticket ids.",
        "type": "investigate",
        "identifier": "run_query",
        "read_only": true,
        "parameters": {
          "query": {
            "description": "Search query in json format for searching ticket",
            "data_type": "string",
            "order": 0,
            "required": true
          }
        },
        "render": {
          "width": 12,
          "title": "Run Query",
          "type": "table",
          "height": 5
        },
        "output": [
          {
            "data_path": "action_result.summary",
            "data_type": "string"
          },
          {
            "data_path": "action_result.status",
            "data_type": "string"
          },
          {
            "data_path": "action_result.parameter.query",
            "data_type": "string"
          },
          {
            "data_path": "action_result.data.*.TicketID",
            "data_type": "string",
            "column_name": "Tikcet ID",
            "column_order": 3
          }
        ],
        "versions":"EQ(*)"
      }
    ]
}
